sonataFlowOperator:
  enabled: true # whether the operator should be deployed by the chart
  subscription:
    namespace: openshift-serverless-logic # namespace where the operator should be deployed
    channel: alpha # channel of an operator package to subscribe to
    installPlanApproval: Automatic # whether the update should be installed automatically
    name: logic-operator-rhel8 # name of the operator package

serverlessOperator:
  enabled: true # whether the operator should be deployed by the chart
  subscription:
    namespace: openshift-serverless # namespace where the operator should be deployed
    channel: stable # channel of an operator package to subscribe to
    installPlanApproval: Automatic # whether the update should be installed automatically
    name: serverless-operator # name of the operator package

rhdhOperator:
  enabled: true # whether the operator should be deployed by the chart
  github:
    token: "" # An authentication token as expected by GitHub. Required for importing resource to the catalog, launching software templates and more.
    clientId: "" # The client ID that you generated on GitHub, for GitHub authentication (requires GitHub App).
    clientSecret: "" # The client secret tied to the generated client ID.
  k8s:
    clusterToken: "" # Kubernetes API bearer token used for authentication.
    clusterUrl: "" # API url of the kubernetes cluster
  subscription:
    namespace: rhdh-operator # namespace where the operator should be deployed
    channel: fast # channel of an operator package to subscribe to
    installPlanApproval: Automatic # whether the update should be installed automatically
    name: rhdh # name of the operator package

rhdhPlugins: # RHDH plugins required for the Orchestrator
  npmRegistry: ""
  scope: "@janus-idp"
  orchestrator:
    package: "backstage-plugin-orchestrator@1.8.7"
    integrity: sha512-cCfXX9y0Fy+l6PfXoZ5ll2vl5buR2GD74TI4XA0uOpH+p2COj7KQg8e8gWqPBMoyvgD6JZiGEUnd/rq6Pn0XMQ==
  orchestrator_backend:
    package: "backstage-plugin-orchestrator-backend-dynamic@1.6.4"
    integrity: sha512-AbTX5YGJGcpWhlPsLmsysn0TAZLEbSW2lmKu1OuhvP4iI2KQBkF6naN/0iJopEH2s0Itd+k48VN+Q7NeAPu2JA==
  notifications:
    package: "plugin-notifications@1.1.16"
    integrity: sha512-pmAInZ3231PGkHxpPzOIFCdftTVlk4+w5/vi5hfixPQRKNf68hm9WudsgK6Q/Rv436DHt8ZWJyAP3QWhxZR2Zw==
  notifications_backend:
    package: "plugin-notifications-backend-dynamic@1.4.3"
    integrity: sha512-FVMmIHjAoRg+kzpEhkEjtCKgRanWHwaI9I2Jqj9/gObnF2WBIllzAPiGNxj6tkMFloLflSJc6kc9ZphttAGGcQ==

postgres:
  serviceName: "sonataflow-psql-postgresql" # The name of the Postgres DB service to be used by platform services. Cannot be empty.
  serviceNamespace: "sonataflow-infra" # The namespace of the Postgres DB service to be used by platform services.
  authSecret:
    name: "sonataflow-psql-postgresql" # name of existing secret to use for PostgreSQL credentials.
    userKey: postgres-username # name of key in existing secret to use for PostgreSQL credentials.
    passwordKey: postgres-password # name of key in existing secret to use for PostgreSQL credentials.
  database: sonataflow # existing database instance used by data index and job service

orchestrator:
  namespace: sonataflow-infra # namespace where the data index, job service and workflows are deployed
  sonataPlatform:
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

tekton:
  enabled: false # whether to create the Tekton pipeline resources

argocd:
  enabled: false # whether to install the ArgoCD plugin and create the orchestrator AppProject
  url: ""
  namespace: orchestrator-gitops
  username: admin
  password: ""
